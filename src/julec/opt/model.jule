// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::jule::lex::{Token}
use std::jule::constant::{Const}
use std::jule::sema::{
    Data,
    Var,
    TypeKind,
    ExprModel,
    BinopExprModel,
    IndexingExprModel,
    BuiltinAppendCallExprModel,
    SliceExprModel,
}

struct SwapExprModel {
    Left:  &Data
    Right: &Data
}

struct EmptyCompareExprModel {
    Expr: ExprModel
    Neg:  bool
}

struct RefExprModel {
    Var: &Var
}

struct StrCompExprModel {
    Left:  ExprModel
    Right: &Const
    NotEq: bool
}

struct MutSlicingExprModel {
    Token: &Token
    Expr:  ExprModel
    Left:  ExprModel
    Right: ExprModel
}

struct UnsafeBinopExprModel {
    Node: &BinopExprModel
}

struct UnsafeIndexingExprModel {
    Node: &IndexingExprModel
}

struct PushToSliceExprModel {
    Dest:  ExprModel
    Elems: &SliceExprModel
}

struct AppendToSliceExprModel {
    Dest:  ExprModel
    Slice: ExprModel
}