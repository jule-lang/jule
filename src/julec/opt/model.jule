// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/jule/lex"
use "std/jule/constant"
use "std/jule/sema"

struct ExceptionalForwardingExprModel {
	Expr: &sema::FnCallExprModel
}

struct SwapExprModel {
	Left:  &sema::Data
	Right: &sema::Data
}

struct EmptyCompareExprModel {
	Expr: sema::ExprModel
	Neg:  bool
}

struct RefExprModel {
	Var: &sema::Var
}

struct StrCompExprModel {
	Left:  sema::ExprModel
	Right: &constant::Const
	NotEq: bool
}

struct MutSlicingExprModel {
	Token: &lex::Token
	Expr:  sema::ExprModel
	Left:  sema::ExprModel
	Right: sema::ExprModel
}

struct UnsafeBinaryExprModel {
	Node: &sema::BinaryExprModel
}

struct UnsafeIndexingExprModel {
	Node: &sema::IndexingExprModel
}

struct PushToSliceExprModel {
	Dest:  sema::ExprModel
	Elems: &sema::SliceExprModel
}

struct AppendToSliceExprModel {
	Dest:  sema::ExprModel
	Slice: sema::ExprModel
}

struct StrRuneIter {
	Expr: &sema::Data
	Base: &sema::RangeIter
}

struct UnsafeDerefExprModel {
	Base: &sema::UnaryExprModel
}

struct UnsafeCastingExprModel {
	Base: &sema::CastingExprModel
}