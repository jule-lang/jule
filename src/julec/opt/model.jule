// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::jule::lex::{Token}
use std::jule::constant::{Const}
use std::jule::sema::{
	Data,
	Var,
	TypeKind,
	ExprModel,
	BinaryExprModel,
	IndexingExprModel,
	BuiltinAppendCallExprModel,
	SliceExprModel,
	FnCallExprModel,
	RangeIter,
	UnaryExprModel,
	CastingExprModel,
}

struct ExceptionalForwardingExprModel {
	Expr: &FnCallExprModel
}

struct SwapExprModel {
	Left:  &Data
	Right: &Data
}

struct EmptyCompareExprModel {
	Expr: ExprModel
	Neg:  bool
}

struct RefExprModel {
	Var: &Var
}

struct StrCompExprModel {
	Left:  ExprModel
	Right: &Const
	NotEq: bool
}

struct MutSlicingExprModel {
	Token: &Token
	Expr:  ExprModel
	Left:  ExprModel
	Right: ExprModel
}

struct UnsafeBinaryExprModel {
	Node: &BinaryExprModel
}

struct UnsafeIndexingExprModel {
	Node: &IndexingExprModel
}

struct PushToSliceExprModel {
	Dest:  ExprModel
	Elems: &SliceExprModel
}

struct AppendToSliceExprModel {
	Dest:  ExprModel
	Slice: ExprModel
}

struct StrRuneIter {
	Expr: &Data
	Base: &RangeIter
}

struct UnsafeDerefExprModel {
	Base: &UnaryExprModel
}

struct UnsafeCastingExprModel {
	Base: &CastingExprModel
}