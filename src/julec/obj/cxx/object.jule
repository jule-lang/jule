// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use obj::{IR}
use conv for std::conv
use std::fs::{File}
use std::time::{Time}
use jule for std::jule

pub struct SerializationInfo {
    pub compiler:         str
    pub compiler_command: str
}

pub struct ObjectCoder {
    ir:   &IR
    info: SerializationInfo
    f:    &File
}

impl ObjectCoder {
    pub static fn new(mut &ir: &IR, mut &f: &File, info: SerializationInfo): &ObjectCoder {
        let mut oc = &ObjectCoder{
            ir: ir,
            info: info,
            f: f,
        }
        ret oc
    }

    fn write(mut &self, mut s: str) {
        _ = self.f.write([]byte(s))!
    }

    fn head(mut &self) {
        let time = Time.now()
        let abs = time.abs()
        self.write("// Auto generated by JuleC.\n")
        self.write("// JuleC version: ")
        self.write(jule::VERSION)
        self.write("\n")
        self.write("// Date: ")
        self.write(conv::fmt_uint(abs.day, 10))
        self.write("/")
        self.write(conv::fmt_uint(abs.month, 10))
        self.write("/")
        self.write(conv::fmt_uint(abs.year, 10))
        self.write(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ")
        self.write(self.info.compiler)
        self.write(" ")
        self.write(self.info.compiler_command)
        self.write("\n\n")
    }

    pub fn serialize(mut &self) {
        self.head()
    }
}
