// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::jule::sema::{Struct}

struct deriveCoder {
    oc: &ObjectCoder
}

impl deriveCoder {
    static fn new(mut oc: &ObjectCoder): &deriveCoder {
        ret &deriveCoder{oc: oc}
    }

    fn cloneFuncDecl(mut self, &s: &Struct): str {
        let mut obj = self.oc.tc.structure(s)
        obj += " clone(void) const "
        ret obj
    }

    fn cloneFuncDef(mut self, &s: &Struct): str {
        let mut obj = self.oc.tc.structure(s)
        obj += " " + obj
        obj += "::clone(void) const "
        ret obj
    }
}