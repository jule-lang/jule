// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::jule::sema::{Struct}
use std::strings::{StrBuilder}

struct deriveCoder {
    oc: &ObjectCoder
}

impl deriveCoder {
    static fn new(mut oc: &ObjectCoder): &deriveCoder {
        ret &deriveCoder{oc: oc}
    }

    fn cloneFuncDecl(mut self, &s: &Struct): str {
        let mut obj = StrBuilder.New(19 + (1 << 5))
        obj.WriteStr(self.oc.tc.structure(s))
        obj.WriteStr(" clone(void) const ")
        ret obj.Str()
    }

    fn cloneFuncDef(mut self, &s: &Struct): str {
        let strct = self.oc.tc.structure(s)
        let mut obj = StrBuilder.New(len(strct)<<1 + 21)
        obj.WriteStr(strct)
        obj.WriteByte(' ')
        obj.WriteStr(strct)
        obj.WriteStr("::clone(void) const ")
        ret obj.Str()
    }
}