// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::unsafe
use fmt for std::internal::fmt

// It places the passes arguments in the string relative to the corresponding
// format string. The to_str function provided by the API is used for string
// conversion. Returns format string if len(args) == 0. If the arguments
// have ended, the remaining part of format string is not processed and
// is returned as is.
//
// Formatting:
//  Arguments are processed sequentially. That is, when an argument
//  encounters a format string parameter, it will be processed according
//  to how many parameters it is. The 5th parameter uses the 5th argument
//  as the value.
//
//  Each format parameter is represented as "{}" in the format string.
//  These parameters will then be deleted according to the processing
//  algorithm and replaced with arguments.
//
//  The parameter "{{}}" is formatted as "{}" actually,
//  And does not increase argument list offset.
//
// Examples:
//  - format("{} {}!", "Hello", "World") = "Hello World!"
//  - format("{} {}") = "{} {}"
//  - format("{} is the {}", "Pi Number") = "Pi Number is the {}"
fn Format(fmt: str, args: ...any): str {
    ret unsafe::StrFromBytes(fmt::Format(fmt, args...))
}