// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::sys::{
    GetLastError,
    ERROR_ACCESS_DENIED,
    ERROR_FILE_NOT_FOUND,
    ERROR_NOT_READY,
    ERROR_INVALID_NAME,
    ERROR_PATH_NOT_FOUND,
}

// Returns last os error by error number of windows.
fn getLastOsErrorWindows(): EnvError {
    err := GetLastError()
    match err {
    | ERROR_ACCESS_DENIED:
        ret EnvError.Denied
    | ERROR_PATH_NOT_FOUND:
        ret EnvError.NotExist
    | ERROR_NOT_READY:
        ret EnvError.Device
    | ERROR_INVALID_NAME:
        ret EnvError.NotExist
    |:
        ret EnvError.Denied
    }
}