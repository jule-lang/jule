// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

pub const E2BIG = Errno(0x7)            // Argument list too long
pub const EACCES = Errno(0xd)           // Permission denied
pub const EADDRINUSE = Errno(0x64)      // Address already in use
pub const EADDRNOTAVAIL = Errno(0x65)   // Cannot assign requested address
pub const EAFNOSUPPORT = Errno(0x66)    // Address family not supported by protocol
pub const EAGAIN = Errno(0xb)           // Try again
pub const EALREADY = Errno(0x67)        // Operation already in progress
pub const EBADF = Errno(0x9)            // Bad file number
pub const EBADMSG = Errno(0x68)         // Not a data message
pub const EBUSY = Errno(0x10)           // Device or resource busy
pub const ECANCELED = Errno(0x69)       // Operation Canceled
pub const ECHILD = Errno(0xa)           // No child processes
pub const ECONNABORTED = Errno(0x6a)    // Software caused connection abort
pub const ECONNREFUSED = Errno(0x6b)    // Connection refused
pub const ECONNRESET = Errno(0x6c)      // Connection reset by peer
pub const EDEADLK = Errno(0x24)         // Resource deadlock would occur
pub const EDEADLOCK = Errno(0x24)       // File locking deadlock error
pub const EDESTADDRREQ = Errno(0x6d)    // Destination address required
pub const EDOM = Errno(0x21)            // Math argument out of domain of func
pub const EEXIST = Errno(0x11)          // File exists
pub const EFAULT = Errno(0xe)           // Bad address
pub const EFBIG = Errno(0x1b)           // File too large
pub const EHOSTUNREACH = Errno(0x6e)    // No route to host
pub const EIDRM = Errno(0x6f)           // Identifier removed
pub const EILSEQ = Errno(0x2a)          // Illegal byte sequence
pub const EINPROGRESS = Errno(0x70)     // Operation now in progress
pub const EINTR = Errno(0x4)            // Interrupted system call
pub const EINVAL = Errno(0x16)          // Invalid argument
pub const EIO = Errno(0x5)              // I/O error
pub const EISCONN = Errno(0x71)         // Transport endpoint is already connected
pub const EISDIR = Errno(0x15)          // Is a directory
pub const ELOOP = Errno(0x72)           // Too many symbolic links encountered
pub const EMFILE = Errno(0x18)          // Too many open files
pub const EMLINK = Errno(0x1f)          // Too many links
pub const EMSGSIZE = Errno(0x73)        // Message too long
pub const ENAMETOOLONG = Errno(0x26)    // File name too long
pub const ENETDOWN = Errno(0x74)        // Network is down
pub const ENETRESET = Errno(0x75)       // Network dropped connection because of reset
pub const ENETUNREACH = Errno(0x76)     // Network is unreachable
pub const ENFILE = Errno(0x17)          // File table overflow
pub const ENOBUFS = Errno(0x77)         // No buffer space available
pub const ENODATA = Errno(0x78)         // No data available
pub const ENODEV = Errno(0x13)          // No such device
pub const ENOENT = Errno(0x2)           // No such file or directory
pub const ENOEXEC = Errno(0x8)          // Exec format error
pub const ENOLCK = Errno(0x27)          // No record locks available
pub const ENOLINK = Errno(0x79)         // Link has been severed
pub const ENOMEM = Errno(0xc)           // Out of memory
pub const ENOMSG = Errno(0x7a)          // No message of desired type
pub const ENOPROTOOPT = Errno(0x7b)     // Protocol not available
pub const ENOSPC = Errno(0x1c)          // No space left on device
pub const ENOSR = Errno(0x7c)           // Out of streams resources
pub const ENOSTR = Errno(0x7d)          // Device not a stream
pub const ENOSYS = Errno(0x28)          // Function not implemented
pub const ENOTCONN = Errno(0x7e)        // Transport endpoint is not connected
pub const ENOTDIR = Errno(0x14)         // Not a directory
pub const ENOTEMPTY = Errno(0x29)       // Directory not empty
pub const ENOTRECOVERABLE = Errno(0x7f) // State not recoverable
pub const ENOTSOCK = Errno(0x80)        // Socket operation on non-socket
pub const ENOTSUP = Errno(0x81)         // Operation not supported
pub const ENOTTY = Errno(0x19)          // Not a typewriter
pub const ENXIO = Errno(0x6)            // No such device or address
pub const EOPNOTSUPP = Errno(0x82)      // Operation not supported on transport endpoint
pub const EOVERFLOW = Errno(0x84)       // Value too large for defined data type
pub const EOWNERDEAD = Errno(0x85)      // Owner died
pub const EPERM = Errno(0x1)            // Operation not permitted
pub const EPIPE = Errno(0x20)           // Broken pipe
pub const EPROTO = Errno(0x86)          // Protocol error
pub const EPROTONOSUPPORT = Errno(0x87) // Protocol not supported
pub const EPROTOTYPE = Errno(0x88)      // Protocol wrong type for socket
pub const ERANGE = Errno(0x22)          // Input is outside the range
pub const EROFS = Errno(0x1e)           // Read-only file system
pub const ESPIPE = Errno(0x1d)          // Illegal seek
pub const ESRCH = Errno(0x3)            // No such process
pub const ETIME = Errno(0x89)           // Timer expired
pub const ETIMEDOUT = Errno(0x8a)       // Connection timed out
pub const ETXTBSY = Errno(0x8b)         // Text file busy
pub const EWOULDBLOCK = Errno(0x8c)     // Operation would block
pub const EXDEV = Errno(0x12)           // Cross-device link