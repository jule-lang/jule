// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

pub const E2BIG = Errno(0x7)            // Argument list too long
pub const EACCES = Errno(0xd)           // Permission denied
pub const EADDRINUSE = Errno(0x62)      // Address already in use
pub const EADDRNOTAVAIL = Errno(0x63)   // Cannot assign requested address
pub const EADV = Errno(0x44)            // Advertise error
pub const EAFNOSUPPORT = Errno(0x61)    // Address family not supported by protocol
pub const EAGAIN = Errno(0xb)           // Try again
pub const EALREADY = Errno(0x72)        // Operation already in progress
pub const EBADE = Errno(0x34)           // Invalid exchange
pub const EBADF = Errno(0x9)            // Bad file number
pub const EBADFD = Errno(0x4d)          // File descriptor in bad state
pub const EBADMSG = Errno(0x4a)         // Not a data message
pub const EBADR = Errno(0x35)           // Invalid request descriptor
pub const EBADRQC = Errno(0x38)         // Invalid request code
pub const EBADSLT = Errno(0x39)         // Invalid slot
pub const EBFONT = Errno(0x3b)          // Bad font file format
pub const EBUSY = Errno(0x10)           // Device or resource busy
pub const ECANCELED = Errno(0x7d)       // Operation Canceled
pub const ECHILD = Errno(0xa)           // No child processes
pub const ECHRNG = Errno(0x2c)          // Channel number out of range
pub const ECOMM = Errno(0x46)           // Communication error on send
pub const ECONNABORTED = Errno(0x67)    // Software caused connection abort
pub const ECONNREFUSED = Errno(0x6f)    // Connection refused
pub const ECONNRESET = Errno(0x68)      // Connection reset by peer
pub const EDEADLK = Errno(0x23)         // Resource deadlock would occur
pub const EDEADLOCK = Errno(0x23)       // File locking deadlock error
pub const EDESTADDRREQ = Errno(0x59)    // Destination address required
pub const EDOM = Errno(0x21)            // Math argument out of domain of func
pub const EDOTDOT = Errno(0x49)         // RFS specific error
pub const EDQUOT = Errno(0x7a)          // Quota exceeded
pub const EEXIST = Errno(0x11)          // File exists
pub const EFAULT = Errno(0xe)           // Bad address
pub const EFBIG = Errno(0x1b)           // File too large
pub const EHOSTDOWN = Errno(0x70)       // Host is down
pub const EHOSTUNREACH = Errno(0x71)    // No route to host
pub const EIDRM = Errno(0x2b)           // Identifier removed
pub const EILSEQ = Errno(0x54)          // Illegal byte sequence
pub const EINPROGRESS = Errno(0x73)     // Operation now in progress
pub const EINTR = Errno(0x4)            // Interrupted system call
pub const EINVAL = Errno(0x16)          // Invalid argument
pub const EIO = Errno(0x5)              // I/O error
pub const EISCONN = Errno(0x6a)         // Transport endpoint is already connected
pub const EISDIR = Errno(0x15)          // Is a directory
pub const EISNAM = Errno(0x78)          // Is a named type file
pub const EKEYEXPIRED = Errno(0x7f)     // Key has expired
pub const EKEYREJECTED = Errno(0x81)    // Key was rejected by service
pub const EKEYREVOKED = Errno(0x80)     // Key has been revoked
pub const EL2HLT = Errno(0x33)          // Level 2 halted
pub const EL2NSYNC = Errno(0x2d)        // Level 2 not synchronized
pub const EL3HLT = Errno(0x2e)          // Level 3 halted
pub const EL3RST = Errno(0x2f)          // Level 3 reset
pub const ELIBACC = Errno(0x4f)         // Can not access a needed shared library
pub const ELIBBAD = Errno(0x50)         // Accessing a corrupted shared library
pub const ELIBEXEC = Errno(0x53)        // Cannot exec a shared library directly
pub const ELIBMAX = Errno(0x52)         // Attempting to link in too many shared libraries
pub const ELIBSCN = Errno(0x51)         // .lib section in a.out corrupted
pub const ELNRNG = Errno(0x30)          // Link number out of range
pub const ELOOP = Errno(0x28)           // Too many symbolic links encountered
pub const EMEDIUMTYPE = Errno(0x7c)     // Wrong medium type
pub const EMFILE = Errno(0x18)          // Too many open files
pub const EMLINK = Errno(0x1f)          // Too many links
pub const EMSGSIZE = Errno(0x5a)        // Message too long
pub const EMULTIHOP = Errno(0x48)       // Multihop attempted
pub const ENAMETOOLONG = Errno(0x24)    // File name too long
pub const ENAVAIL = Errno(0x77)         // No XENIX semaphores available
pub const ENETDOWN = Errno(0x64)        // Network is down
pub const ENETRESET = Errno(0x66)       // Network dropped connection because of reset
pub const ENETUNREACH = Errno(0x65)     // Network is unreachable
pub const ENFILE = Errno(0x17)          // File table overflow
pub const ENOANO = Errno(0x37)          // No anode
pub const ENOBUFS = Errno(0x69)         // No buffer space available
pub const ENOCSI = Errno(0x32)          // No CSI structure available
pub const ENODATA = Errno(0x3d)         // No data available
pub const ENODEV = Errno(0x13)          // No such device
pub const ENOENT = Errno(0x2)           // No such file or directory
pub const ENOEXEC = Errno(0x8)          // Exec format error
pub const ENOKEY = Errno(0x7e)          // Required key not available
pub const ENOLCK = Errno(0x25)          // No record locks available
pub const ENOLINK = Errno(0x43)         // Link has been severed
pub const ENOMEDIUM = Errno(0x7b)       // No medium found
pub const ENOMEM = Errno(0xc)           // Out of memory
pub const ENOMSG = Errno(0x2a)          // No message of desired type
pub const ENONET = Errno(0x40)          // Machine is not on the network
pub const ENOPKG = Errno(0x41)          // Package not installed
pub const ENOPROTOOPT = Errno(0x5c)     // Protocol not available
pub const ENOSPC = Errno(0x1c)          // No space left on device
pub const ENOSR = Errno(0x3f)           // Out of streams resources
pub const ENOSTR = Errno(0x3c)          // Device not a stream
pub const ENOSYS = Errno(0x26)          // Function not implemented
pub const ENOTBLK = Errno(0xf)          // Block device required
pub const ENOTCONN = Errno(0x6b)        // Transport endpoint is not connected
pub const ENOTDIR = Errno(0x14)         // Not a directory
pub const ENOTEMPTY = Errno(0x27)       // Directory not empty
pub const ENOTNAM = Errno(0x76)         // Not a XENIX named type file
pub const ENOTRECOVERABLE = Errno(0x83) // State not recoverable
pub const ENOTSOCK = Errno(0x58)        // Socket operation on non-socket
pub const ENOTSUP = Errno(0x5f)         // Operation not supported
pub const ENOTTY = Errno(0x19)          // Not a typewriter
pub const ENOTUNIQ = Errno(0x4c)        // Name not unique on network
pub const ENXIO = Errno(0x6)            // No such device or address
pub const EOPNOTSUPP = Errno(0x5f)      // Operation not supported on transport endpoint
pub const EOVERFLOW = Errno(0x4b)       // Value too large for defined data type
pub const EOWNERDEAD = Errno(0x82)      // Owner died
pub const EPERM = Errno(0x1)            // Operation not permitted
pub const EPFNOSUPPORT = Errno(0x60)    // Protocol family not supported
pub const EPIPE = Errno(0x20)           // Broken pipe
pub const EPROTO = Errno(0x47)          // Protocol error
pub const EPROTONOSUPPORT = Errno(0x5d) // Protocol not supported
pub const EPROTOTYPE = Errno(0x5b)      // Protocol wrong type for socket
pub const ERANGE = Errno(0x22)          // Input is outside the range
pub const EREMCHG = Errno(0x4e)         // Remote address changed
pub const EREMOTE = Errno(0x42)         // Object is remote
pub const EREMOTEIO = Errno(0x79)       // Remote I/O error
pub const ERESTART = Errno(0x55)        // Interrupted system call should be restarted
pub const ERFKILL = Errno(0x84)         // Operation not possible due to RF-kill
pub const EROFS = Errno(0x1e)           // Read-only file system
pub const ESHUTDOWN = Errno(0x6c)       // Cannot send after transport endpoint shutdown
pub const ESOCKTNOSUPPORT = Errno(0x5e) // Socket type not supported
pub const ESPIPE = Errno(0x1d)          // Illegal seek
pub const ESRCH = Errno(0x3)            // No such process
pub const ESRMNT = Errno(0x45)          // Srmount error
pub const ESTALE = Errno(0x74)          // Stale NFS file handle
pub const ESTRPIPE = Errno(0x56)        // Streams pipe error
pub const ETIME = Errno(0x3e)           // Timer expired
pub const ETIMEDOUT = Errno(0x6e)       // Connection timed out
pub const ETOOMANYREFS = Errno(0x6d)    // Too many references: cannot splice
pub const ETXTBSY = Errno(0x1a)         // Text file busy
pub const EUCLEAN = Errno(0x75)         // Structure needs cleaning
pub const EUNATCH = Errno(0x31)         // Protocol driver not attached
pub const EUSERS = Errno(0x57)          // Too many users
pub const EWOULDBLOCK = Errno(0xb)      // Operation would block
pub const EXDEV = Errno(0x12)           // Cross-device link
pub const EXFULL = Errno(0x36)          // Exchange full