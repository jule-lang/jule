// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Reader trait mask for stream reader.
pub trait Reader {
    // Read bytes to buffer from stream and returns readed byte count.
    // The number of bytes readed can never exceed the length of the buff.
    // If the buff is larger than the number of bytes that can be read,
    // the buffer will not cause an overflow.
    pub fn read(mut self, mut buff: []byte)!: (n: int)
}

// Reader trait mask for stream writer.
pub trait Writer {
    // Writes bytes to stream and returns writed byte count.
    // The number of bytes written can never exceed the length of the buff.
    pub fn write(mut self, buff: []byte)!: (n: int)
}

// Reader and closer trait mask for read/close streams.
pub trait WriterCloser {
    // Derived from Writer trait.
    pub fn write(mut self, buff: []byte)!: (n: int)

    // Close buffer.
    pub fn close(mut self)!
}

// Stream trait mask for R/W streams.
pub trait Stream {
    // Derived from Reader trait.
    pub fn read(mut self, mut buff: []byte)!: (n: int)

    // Derived from Writer trait.
    pub fn write(mut self, buff: []byte)!: (n: int)
}
