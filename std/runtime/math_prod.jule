// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

#build production

use integ for std::jule::integrated

// Same as no-production version but it not takes debug information.
fn div[T, Denominator](x: T, d: Denominator): T {
	if d == 0 {
		panic("runtime: divide by zero")
	}
	// Compiler uses this function for divisions.
	// So implement shifting with emit to avoid recursion calls.
	ret unsafe { integ::Emit[T]("({})({} / {})", T, x, d) }
}

// Same as no-production version but it not takes debug information.
fn mod[T, Denominator](x: T, d: Denominator): T {
	if d == 0 {
		panic("runtime: modulo by zero")
	}
	// Compiler uses this function for modulo.
	// So implement shifting with emit to avoid recursion calls.
	ret unsafe { integ::Emit[T]("({})({} % {})", T, x, d) }
}