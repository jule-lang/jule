// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

#build !atomicrc

// Reads reference counting data.
// Passing nil pointer is not safe.
#export "__jule_RCLoad"
unsafe fn _RCLoad(p: _RCPtr): _RCType {
	ret *p
}

// Adds strong reference to reference pointer.
// Passing nil pointer is not safe.
#export "__jule_RCAdd"
unsafe fn _RCAdd(mut p: _RCPtr) {
	*p += _RCDelta
}

// Drops strong reference from reference pointer.
// Passing nil pointer is not safe.
// Reports wheter allocation still alive.
#export "__jule_RCDrop"
unsafe fn _RCDrop(mut p: _RCPtr): bool {
	// If old data equals to delta, means references zeroed.
	alive := *p > _RCDelta
	*p -= _RCDelta
	ret alive
}