// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::unsafe

type refType: uint

// Reports whether pointer allocations are points to same address.
#export "__jule_ptrEqual"
fn ptrEqual(a: *unsafe, b: *unsafe): bool {
	ret a == b
}

// Returns pointer in string form.
#export "__jule_ptrToStr"
fn ptrToStr(p: *unsafe): str {
	const numbers = "0123456789abcdef"
	mut buf := make([]byte, 0, 12)
	buf = append(buf, "0x"...)
	mut z := uintptr(p)
	for z > 0 {
		buf = append(buf, numbers[z%16])
		z >>= 4
	}
	mut i := 0
	for i < len(buf)>>1; i++ {
		buf[i+2], buf[len(buf)-i-1] = buf[len(buf)-i-1], buf[i+2]
	}
	ret unsafe::StrFromBytes(buf)
}