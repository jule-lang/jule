// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Type of a process id.
pub type Pid: int

// Cmd runs a command in the operating system.
// There is no pipe for the output of the command,
// so any output will appear on the screen.
//
// After a cmd is spawned, the process must be terminated
// before it can be used again. Cmd does not follow this.
// That's why you need to let it know this with methods
// such as `kill` or `wait`.
pub struct Cmd {
    _fle: str
    _pid: Pid

    pub args: []str
    pub env:  []str
}

impl Cmd {
    // Process id that not spawned.
    pub const NPID: Pid = -1

    // Returns new instance of command for file descriptor.
    pub static fn new(file: str): &Cmd {
        ret &Cmd{
            _fle: file,
            _pid:  Cmd.NPID,
        }
    }

    // Returns PID (process id).
    // Returns NPID if process not spawned.
    pub fn pid(self): Pid { ret self._pid }

    // Returns file descriptor.
    pub fn file(self): str { ret self._fle }
}
