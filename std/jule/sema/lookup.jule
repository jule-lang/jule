// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Lookup.
pub trait Lookup {
    // Find imported package.
    // Returns nil reference if did not found any match.
    pub fn FindPackage(mut self, ident: str): &ImportInfo

    // Select imported package.
    // Returns nil reference if did not found any match.
    pub fn SelectPackage(mut self, selector: fn(&ImportInfo): bool): &ImportInfo

    // Find variable by identifier and cpp-linked state.
    // Returns nil reference if did not found any match.
    pub fn FindVar(mut self, ident: str, cpp_linked: bool): &Var

    // Find type alias by identifier and cpp-linked state.
    // Returns nil reference if did not found any match.
    pub fn FindTypeAlias(mut self, ident: str, cpp_linked: bool): &TypeAlias

    // Find structure by identifier and cpp-linked state.
    // Returns nil reference if did not found any match.
    pub fn FindStruct(mut self, ident: str, cpp_linked: bool): &Struct

    // Find function by identifier and cpp-linked state.
    // Returns nil reference if did not found any match.
    pub fn FindFn(mut self, ident: str, cpp_linked: bool): &Fn

    // Find trait by identifier.
    // Returns nil reference if did not found any match.
    pub fn FindTrait(mut self, ident: str): &Trait

    // Find enum by identifier.
    // Returns nil reference if did not found any match.
    pub fn FindEnum(mut self, ident: str): &Enum

    // Find type enum by identifier.
    // Returns nil reference if did not found any match.
    pub fn FindTypeEnum(mut self, ident: str): &TypeEnum
}