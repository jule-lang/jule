// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

enum runtimeFunc: str {
	arrayCmp: "arrayCmp",
	toStr: "toStr",
}

fn runtimeFindFn(mut &runtime: &ImportInfo, ident: runtimeFunc): &Fn {
	const Binded = false
	mut f := runtime.FindFn(ident, Binded)
	if f == nil {
		panic("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable")
	}
	ret f
}

enum runtimeStruct: str {
	_Map: "_Map",
}

fn runtimeFindStruct(mut &runtime: &ImportInfo, ident: runtimeStruct): &Struct {
	const Binded = false
	mut f := runtime.FindStruct(ident, Binded)
	if f == nil {
		panic("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable")
	}
	ret f
}