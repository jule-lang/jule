// Copyright 2023-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/os"
use "std/os/filepath"
use "std/runtime"

// Environment Variables.
// Initialized by initializer function.
static PathStdlib = "" // Path of standard library.
static PathExec = ""   // Path of executable file's directory.
static PathWd = ""     // Path of working directory.
static PathApi = ""    // Path of main API header file.

// Target operating system.
// Setted to runtime operating system by default.
static mut OS = runtime::OS

// Target architecture.
// Setted to runtime architecture by default.
static mut Arch = runtime::Arch

fn init() {
	mut path := os::Executable()
	if path == "" {
		panic("build: executable file cannot found")
	}

	// Break immutability to assign paths.
	unsafe {
		*(&PathWd) = os::Getwd() else {
			panic("build: working directory path cannot found")
			ret // To avoid assignment error.
		}
		*(&PathExec) = filepath::Dir(path)
		*(&PathStdlib) = filepath::Join(PathExec, "..", Stdlib)
		*(&PathApi) = filepath::Join(PathExec, "..", "api", "jule.hpp")
	}
}