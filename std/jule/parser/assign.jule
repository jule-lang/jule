// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::jule::lex::{Token, TokenId, TokenKind, IsAssign, IsAssignOp}

// Assignment information.
struct assignInfo {
	l:      []&Token
	r:      []&Token
	setter: &Token
	ok:     bool
}

// Checks assignment tokens and whether reports is ok or not.
fn checkAssignTokens(&tokens: []&Token): bool {
	if len(tokens) == 0 || !IsAssign(tokens[0].Id) {
		ret false
	}
	mut braceN := 0
	for _, t in tokens {
		match t.Id {
		| TokenId.LBrace
		| TokenId.LBracket
		| TokenId.LParent:
			braceN++
		| TokenId.RBrace
		| TokenId.RBracket
		| TokenId.RParent:
			braceN--
		}
		match {
		| braceN < 0:
			ret false
		| braceN > 0:
			continue
		| IsAssignOp(t.Id) | t.Id == TokenId.ColonEq:
			ret true
		}
	}
	ret false
}