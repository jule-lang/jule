// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use lex for std::jule::lex

// Assignment information.
struct assignInfo {
	l:      []&lex::Token
	r:      []&lex::Token
	setter: &lex::Token
	ok:     bool
}

// Checks assignment tokens and whether reports is ok or not.
fn checkAssignTokens(&tokens: []&lex::Token): bool {
	if len(tokens) == 0 || !lex::IsAssign(tokens[0].Id) {
		ret false
	}
	mut braceN := 0
	for _, t in tokens {
		match t.Id {
		| lex::TokenId.LBrace
		| lex::TokenId.LBracket
		| lex::TokenId.LParent:
			braceN++
		| lex::TokenId.RBrace
		| lex::TokenId.RBracket
		| lex::TokenId.RParent:
			braceN--
		}
		match {
		| braceN < 0:
			ret false
		| braceN > 0:
			continue
		| lex::IsAssignOp(t.Id) | t.Id == lex::TokenId.ColonEq:
			ret true
		}
	}
	ret false
}