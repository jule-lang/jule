// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/os/filepath"

// Fileset for lexing.
struct Fileset {
	Path:   str
	Data:   []byte
	Tokens: []&Token
}

impl Fileset {
	// Returns new Fileset with path.
	static fn New(path: str): &Fileset {
		ret &Fileset{
			Path: path,
		}
	}

	// Fill data.
	fn Fill(mut self, mut data: []byte) {
		self.Data = data
	}

	// Returns directory of file's path.
	fn Dir(self): str {
		ret filepath::Dir(self.Path)
	}

	// Returns filename.
	fn Name(self): str {
		ret filepath::Base(self.Path)
	}

	// Returns self as uintptr.
	fn Addr(self): uintptr {
		ret uintptr(&self)
	}

	// Returns line (not include new-line char) by row.
	// Returns empty string if line is not buffer.
	fn GetRow(self, row: int): str {
		mut n := 0
		mut lineStart := 0
		mut i := 0
		for i < len(self.Data); i++ {
			if self.Data[i] != '\n' {
				continue
			}
			n++
			if n == row {
				ret str(self.Data[lineStart:i])
			}
			lineStart = i + 1
		}
		ret ""
	}
}