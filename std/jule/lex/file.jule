// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::fs::{Status, FsError}
use path for std::fs::path

// Fileset for lexing.
pub struct File {
    pub Path:   str
    pub Data:   []byte
    pub Tokens: []&Token
}

impl File {
    // Reports whether file path is exist and accessible.
    pub fn IsOk(self): bool {
        _ = Status.Of(self.Path) else { ret false }
        ret true
    }

    // Fill data.
    pub fn Fill(mut self, mut data: []byte) {
        self.Data = data
    }

    // Returns directory of file's path.
    pub fn Dir(self): str {
        ret path::Dir(self.Path)
    }

    // Returns filename.
    pub fn Name(self): str {
        ret path::Base(self.Path)
    }

    // Returns self as uintptr.
    pub fn Addr(self): uintptr {
        ret uintptr(&self)
    }

    // Returns line (not include new-line char) by row.
    // Returns empty string if line is not buffer.
    pub fn GetRow(self, row: int): str {
        let mut n = 0
        let mut lineStart = 0
        let mut i = 0
        for i < self.Data.len; i++ {
            if self.Data[i] != '\n' {
                continue
            }
            n++
            if n == row {
                ret str(self.Data[lineStart:i])
            }
            lineStart = i + 1
        }
        ret ""
    }
}

// Returns new File points to Jule file.
pub fn NewFileSet(path: str): &File {
    ret &File{
        Path: path,
    }
}