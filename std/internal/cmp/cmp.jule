// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Reports whether x is less than y.
// For floating-point types, a NaN is considered less than any non-NaN,
// and -0.0 is not less than (is equal to) 0.0.
fn Less[T: ordered](x: T, y: T): bool {
    const match type T {
    | f32 | f64:
        if isNaN(x) && !isNaN(y) {
            ret true
        }
    }
    ret x < y
}

// isNaN reports whether x is a NaN without requiring the math package.
// This will always return false if T is not floating-point.
fn isNaN[T](x: T): bool {
    ret x != x
}