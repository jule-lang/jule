// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use nosafe for std::internal::nosafe

// Converts decimal string to int.
// Return integer and success state.
fn Atoi(&s: str): (i: int, ok: bool) {
    let mut bs = nosafe::Stobs(s)
    if bs[0] == '-' {
        if bs.len == 1 {
            ret
        }
        bs = bs[1:]
    }
    for _, b in bs {
        if '0' <= b && b <= '9' {
            i *= 10
            i += int(b - '0')
        } else {
            ret
        }
    }
    ok = true
    if s[0] == '-' {
        i = -i
    }
    ret
}

// Converts hexadecimal bytes of string to int.
// Returns number, characters consumed, success state.
fn Xbtoi(&s: []byte): (n: int, i: int, ok: bool) {
    for i < s.len; i++ {
        if '0' <= s[i] && s[i] <= '9' {
            n <<= 4
            n += int(s[i] - '0')
        } else if 'a' <= s[i] && s[i] <= 'f' {
            n <<= 4
            n += int(s[i] - 'a') + 10
        } else if 'A' <= s[i] && s[i] <= 'F' {
            n <<= 4
            n += int(s[i] - 'A') + 10
        } else {
            break
        }
    }
    if i == 0 {
        ret 0, i, false
    }
    ret n, i, true
}