// Copyright 2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Returns x in decimal string format.
fn Itoa(x: int): str {
    if x < 0 {
        ret "-" + Utoa(uint(-x))
    }
    ret Utoa(uint(x))
}

// Returns x in decimal string format.
fn Utoa(mut x: uint): str {
    if x == 0 {
        ret "0"
    }
    let mut buf = "                    " // big enough for 64bit value base 10
    let mut i = buf.len - 1
    for x >= 10 {
        let q = x / 10
        buf[i] = byte('0' + x - q*10)
        i--
        x = q
    }
    // x < 10
    buf[i] = byte('0' + x)
    buf = buf[i:]
    ret buf
}
