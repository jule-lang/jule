// Copyright 2023-2024 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/sync"
use "std/sync/atomic"

static mut n = atomic::Int.New(0)

fn addToN(mut wg: &sync::WaitGroup) {
	n.Add(1, atomic::SeqCst)
	wg.Done()
}

fn main() {
	let mut wg = sync::WaitGroup.New()

	let mut j = 0
	for j < 100; j++ {
		wg.Add(1)
		co addToN(wg)
	}

	wg.Wait()

	println(n.Load(atomic::SeqCst))
}